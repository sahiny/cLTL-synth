function phi = U(varargin)
assert(nargin == 2, 'U takes tow variables');
if strcmp(varargin{1}.type, 'inner') || strcmp(varargin{1}.type, 'ap')
    assert(strcmp(varargin{1}.type, 'inner') ||...
        strcmp(varargin{2}.type, 'ap'), ...
            'Inner and outer logic formulas cannot be mixed');
        
    phi = struct('type', 'inner', 'Op', 'U', 'args', {varargin}, ...
        'formula', strcat('U(', varargin{1}.formula, ', ', ...
        varargin{2}.formula, ')'));
else
    assert(strcmp(varargin{2}.type, 'outer')||...
        strcmp(varargin{2}.type, 'tp'), ...
            'Inner and outer logic formulas cannot be mixed');

    
    phi = struct('type', 'outer', 'Op', 'U', 'args', {varargin}, ...
        'formula', strcat('U(', varargin{1}.formula, ', ', ...
        varargin{2}.formula, ')'));
    
end
